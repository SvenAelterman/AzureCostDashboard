{
	"name": "RootExtractAzureBilling",
	"properties": {
		"activities": [
			{
				"name": "OAuthToken",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "AzureKeyValue Secret",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "AzureKeyValue ClientId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://login.microsoftonline.com/', pipeline().globalParameters.tenantId, '/oauth2/token')",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "@concat('grant_type=client_credentials&client_id=', activity('AzureKeyValue ClientId').output['value'], '&client_secret=', activity('AzureKeyValue Secret').output['value'], '&resource=https%3A%2F%2Fmanagement.azure.com%2F')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set access_token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "OAuthToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "access_token",
					"value": {
						"value": "@concat('Bearer ', activity('OAuthToken').output['access_token'])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy Subscribers",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach4",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET",
							"additionalHeaders": {
								"value": "@{concat('Authorization:', variables('access_token'))}",
								"type": "Expression"
							},
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"SubscriptionId"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['authorizationSource']"
								},
								"sink": {
									"name": "AuthorizationSource",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['subscriptionId']"
								},
								"sink": {
									"name": "SubscriptionId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['displayName']"
								},
								"sink": {
									"name": "DisplayName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['state']"
								},
								"sink": {
									"name": "State",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['value']"
					}
				},
				"inputs": [
					{
						"referenceName": "Subscribers",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_Subscribers",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "SQL Subscribers",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy Subscribers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_Subscribers",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SQL Subscribers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SQL Subscribers').output['value']",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Execute Pipeline Resource Groups",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ChildResourceGroups",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscriptionId": {
										"value": "@item()['SubscriptionId']",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Execute Pipeline Usage Aggregates",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ChildUsageAggregates",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscriptionId": {
										"value": "@item()['SubscriptionId']",
										"type": "Expression"
									},
									"usageDate": {
										"value": "@utcnow()",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "SQL Resource Groups",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_ResourceGroups",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SQL Resource Groups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SQL Resource Groups').output['value']",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Execute Pipeline Resources",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ChildResources",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"resourceGroupPath": {
										"value": "@item()['Id']",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "AzureKeyValue Secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.azurekeyvault_client_secret_secretidentifier",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "AzureKeyValue ClientId",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.azurekeyvault_client_id_secretidentifier",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "SQL Resources",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_Resources",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach3",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SQL Resources",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SQL Resources').output['value']",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Costs",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://management.azure.com', item()['ResourceGroupId'] ,'/providers/Microsoft.CostManagement/query?api-version=2021-10-01&$top=5000')",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@variables('access_token')",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@concat('{\"type\":\"ActualCost\",\"dataSet\":{\"granularity\":\"Daily\",\"aggregation\":{\"totalCost\":{\"name\":\"Cost\",\"function\":\"Sum\"},\"totalCostUSD\":{\"name\":\"CostUSD\",\"function\":\"Sum\"}},\"sorting\":[{\"direction\":\"ascending\",\"name\":\"UsageDate\"}],\"filter\":{\"And\":[{\"Dimensions\":{\"Name\":\"PublisherType\",\"Operator\":\"In\",\"Values\":[\"azure\"]}},{\"Dimensions\":{\"Name\":\"ResourceId\",\"Operator\":\"In\",\"Values\":[\"', item()['Id'] ,'\"]}}]}}}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Costs",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[spInsertDataFlowCosts]",
									"storedProcedureParameters": {
										"JSON": {
											"type": "String",
											"value": {
												"value": "@string(activity('Costs').output)",
												"type": "Expression"
											}
										},
										"ResourceId": {
											"type": "String",
											"value": {
												"value": "@item()['Id']",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SQL_DataFlowCosts",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			},
			{
				"name": "Lookup Distict Subscription_Location",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DISTINCT \n\t rg.SubscriptionId\n\t,r.Location\nFROM\n\tResources r\n\t\tINNER JOIN\n\tResourceGroups rg\n\t\tON r.ResourceGroupId = rg.Id\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_Resources",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Subscription_Location",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Distict Subscription_Location",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Distict Subscription_Location').output",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Execute Pipeline PriceLists",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "ChildPriceLists",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"subscriptionId": {
										"value": "@item()['SubscriptionId']",
										"type": "Expression"
									},
									"armRegionName": {
										"value": "@item()['Location']",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy BillingAccounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set access_token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET",
							"additionalHeaders": {
								"value": "@{concat('Authorization:', variables('access_token'))}",
								"type": "Expression"
							},
							"requestTimeout": ""
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"AccountId"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "Id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['accountId']"
								},
								"sink": {
									"name": "AccountId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['accountStatus']"
								},
								"sink": {
									"name": "AccountStatus",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['accountType']"
								},
								"sink": {
									"name": "AccountType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['agreementType']"
								},
								"sink": {
									"name": "AgreementType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['displayName']"
								},
								"sink": {
									"name": "DisplayName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']['organizationId']"
								},
								"sink": {
									"name": "OrganizationId",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['value']"
					}
				},
				"inputs": [
					{
						"referenceName": "BillingAccounts",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_BillingAccounts",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "BillingAccounts",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy BillingAccounts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_BillingAccounts",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach4",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "BillingAccounts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('BillingAccounts').output['value']",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy BillingSubscription",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "billingAccountId",
											"value": {
												"value": "@item()['Id']",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"additionalHeaders": {
											"value": "@{concat('Authorization:', variables('access_token'))}",
											"type": "Expression"
										},
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": false,
										"keys": [
											"AccountId",
											"SubscriptionId"
										]
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['properties']['subscriptionId']"
											},
											"sink": {
												"name": "SubscriptionId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['billingAccountId']"
											},
											"sink": {
												"name": "AccountId",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['value']"
								}
							},
							"inputs": [
								{
									"referenceName": "BillingSubscriptions",
									"type": "DatasetReference",
									"parameters": {
										"BillingAccountId": {
											"value": "@item()['Id']",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SQL_BillingSubscriptions",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "debugger",
								"value": {
									"value": "@item()['Id']",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"access_token": {
				"type": "String"
			},
			"nextLink": {
				"type": "String",
				"defaultValue": "0"
			},
			"debugger": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-03-18T14:52:37Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}